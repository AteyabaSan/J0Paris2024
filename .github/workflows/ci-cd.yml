name: Java CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: mowgli
          POSTGRES_PASSWORD: EspritNwaar74!
          POSTGRES_DB: jo_paris
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U mowgli"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    # Checkout the repository to the runner
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch the entire history for all branches and tags

    # Set up JDK 17 for the runner environment
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Check Maven version (optional, but good for debugging purposes)
    - name: Check Maven Version
      run: mvn -version

    # Build and test the project with Maven
    - name: Build and Test with Maven
      run: mvn -B clean install -U -X --file pom.xml

  deploy:
    needs: build  # Ensure the build job is completed successfully before deploying
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository again to the runner for deployment
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch the entire history for all branches and tags

    # Set up JDK 17 for the runner environment again for the deploy step
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Install Heroku CLI for deployment
    - name: Install Heroku CLI
      run: |
        curl https://cli-assets.heroku.com/install.sh | sh

    # Ensure Heroku remote is added only if not already present
    - name: Ensure Heroku remote is added
      run: |
        git remote | grep heroku || git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/jeux-olympiques-paris-2024.git

    # Deploy the application to Heroku
    - name: Deploy to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}  # Use GitHub Secrets to securely store your Heroku API Key
        SPRING_PROFILES_ACTIVE: prod  # Set the profile to prod for Heroku
      run: |
        git push heroku main



